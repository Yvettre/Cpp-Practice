/***************************************************************
网易2018年校招：疯狂队列

小易老师是非常严厉的,它会要求所有学生在进入教室前都排成一列,并且他要求学生按照身高不递减的顺序排列。
有一次,n个学生在列队的时候,小易老师正好去卫生间了。
学生们终于有机会反击了,于是学生们决定来一次疯狂的队列,他们定义一个队列的疯狂值为每对相邻排列学生身高差的绝对值总和。
由于按照身高顺序排列的队列的疯狂值是最小的,他们当然决定按照疯狂值最大的顺序来进行列队。
现在给出n个学生的身高,请计算出这些学生列队的最大可能的疯狂值。

- 输入描述：
    输入包括两行,第一行一个整数n(1 ≤ n ≤ 50),表示学生的人数
    第二行为n个整数h[i](1 ≤ h[i] ≤ 1000),表示每个学生的身高
- 输出描述：
    输出一个整数,表示n个学生列队可以获得的最大的疯狂值。

如样例[5,10,25,25,40]
当队列排列顺序是: 25-10-40-5-25, 身高差绝对值的总和为15+30+35+20=100。
这是最大的疯狂值了。
****************************************************************/

/*
一开始我的想法是，把最大的放中间，然后把两个最小的放中间的两边，然后把次高的两个以此类推。。
然后发现不会实现。。思前想后又觉得可能这种思路不正确，忍不住取看讨论。。

发现，还有先把最小的放中间，然后把最高的两个放在中间的两边，以此类推，
得到的结论是无论是先将最小的放中间还是最大的放中间，最后都需要考虑剩下的最后一个放在左边还是右边
我觉得想法很好，也写得很好，我也因此知道了双向队列deque这个容器。。

然后我继续往下看，看到一个更简洁的，我没有看懂奇数情况的代码，但是根据偶数情况，我总结了一下：
- 假设队列是[5,10,25,40]，那么疯狂队列是[25,5,40,10]，那么疯狂值是
    res=40-5+40-1-+25-5=40+40-5-5-10+25=40+40-5-5-10+25-10+25+10-25
    =(40+25)*2-(5+10)*2+10-25=(40+25)*2-(5+10)*2-(25-10)
    也就是说，无论怎样排列，最大疯狂值其实是确定的。。
- 而对于奇数的情况，假设是[5,10,13,25,40]，疯狂队列应为[13,5,40,10,25]，
    其实就是偶数情况多了一个中位数13到最后应该是排在左边还是右边的问题。。。
    所以先不考虑13，按照偶数情况排完得到没有考虑中位数的疯狂值，
    再加上中位数13放在使得最终疯狂值最大的一边的差值，就是答案了。
*/

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int crazy(vector<int>& h, int& n){
    sort(h.begin(),h.end(),
        [](const int& a,int b)
         { return a<b; });
    
    int res = 0, sum1=0, sum2=0;
    if (n%2==0){
        for (int i=0;i<n/2;i++) sum1 = sum1 + h[i];
        for (int i=n/2;i<n;i++) sum2 = sum2 + h[i];
        res = 2*sum2-2*sum1-(h[n/2]-h[n/2-1]);
    }
    else {
        for (int i=0;i<n/2;i++) sum1 = sum1 + h[i];
        for (int i=n/2+1;i<n;i++) sum2 = sum2 + h[i];
        res = 2*sum2-2*sum1-(h[n/2+1]-h[n/2-1]);
        res = res + max(h[n/2]-h[n/2-1], h[n/2+1]-h[n/2]);
    }
    return res;
}

int main(){
    int n;
    while(cin>>n){
        vector<int> h(n,0);
        for (int i=0;i<n;i++) cin>>h[i];
        
        cout<<crazy(h,n)<<endl;
    }
    return 0;
}